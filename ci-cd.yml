---
- name: Install required s/w's on devserver
  hosts: devserver 
  tasks:
    - name: Install required s/w's 
      apt:
        name: "{{item.a}}"
        state: "{{item.b}}"
        update_cache: "{{item.c}}"
      with_items: 
        - {a: git,b: present,c: yes}  
        - {a: openjdk-11-jdk,b: present,c: no}  
        - {a: maven,b: present,c: no}

- name: Install required s/w's on qaserver
  hosts: qaserver
  tasks:
    - name: Install required s/w's
      apt:
        name: "{{item.a}}"
        state: "{{item.b}}"
        update_cache: "{{item.c}}"
      with_items:
        - {a: git,b: present,c: yes}
        - {a: openjdk-11-jdk,b: present,c: no}
        - {a: tomcat9,b: present,c: no}
        - {a: tomcat9-admin,b: present,c: no}
- name: Install required s/w's on prodserver
  hosts: prodserver
  tasks:
    - name: Install required s/w's
      apt:
        name: "{{item.a}}"
        state: "{{item.b}}"
        update_cache: "{{item.c}}"
      with_items:
        - {a: tomcat9,b: present,c: yes}
        - {a: tomcat9-admin,b: present,c: no}
- name: Continuous Download and Continuous build 
  hosts: devserver 
  tasks:
    - name: Download dev code from github
      git:
        repo: https://github.com/intelliqittrainings/maven.git
        dest: dev-git 
    - name: Create an artifact from above code 
      shell: cd dev-git;mvn package
    - name: Fetch the artifact to the controller 
      fetch:
        src: dev-git/webapp/target/webapp.war
        dest: /tmp
- name: Continuous Deployment and Continuous Testing 
  hosts: qaserver
  tasks: 
    - name: Deploy artifact into tomcat on qaserver 
      copy:
        src: /tmp/172.31.94.19/dev-git/webapp/target
        dest: /var/lib/tomcat9/webapps/testapp.war
    - name: Download selenium scripts
      git: 
        repo: https://github.com/intelliqittrainings/FunctionalTesting.git
        dest: test-git
    - name: run the selenium scripts
      shell: java -jar test-git/testing.jar
- name: Continuous Delivery 
  hosts: prodserver
  tasks: 
    - name: Deploy artifact to prodserver 
      copy:
        src: /tmp/172.31.94.19/dev-git/webapp/target
        dest: /var/lib/tomcat9/webapps/prodapp.war
 
...
